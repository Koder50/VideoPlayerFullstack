{"ast":null,"code":"import { catchError, tap, throwError, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ChatParticipantService = /*#__PURE__*/(() => {\n  class ChatParticipantService {\n    constructor(http) {\n      this.http = http;\n      this.mail = 'karol@mail4.com';\n      this.globalChatParticipants = [];\n    }\n\n    getChatParticipants() {\n      return this.http.get(`${environment.apiURL}/chat-participants`).pipe(tap(data => data), map(chatParticipants => {\n        return chatParticipants.filter(chatParticipant => {\n          chatParticipant.speaker == this.mail;\n        });\n      }), tap(data => console.log(\"data: \" + data)), catchError(err => throwError(() => err)));\n    }\n\n    getChatParticipant(id) {\n      return this.http.get(`${environment.apiURL}/chat-participants/${id}`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    addChatParticipant(chatParticipant) {\n      return this.http.post(`${environment.apiURL}/chat-participants`, chatParticipant).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    updateChatParticipant(id, chatParticipant) {\n      return this.http.put(`${environment.apiURL}/chat-participants/${id}`, chatParticipant).pipe(catchError(err => throwError(() => err)));\n    }\n\n    deleteChatParticipant(id) {\n      return this.http.delete(`${environment.apiURL}/chat-participants/${id}`).pipe(catchError(err => throwError(() => err)));\n    }\n\n  }\n\n  ChatParticipantService.ɵfac = function ChatParticipantService_Factory(t) {\n    return new (t || ChatParticipantService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChatParticipantService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatParticipantService,\n    factory: ChatParticipantService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatParticipantService;\n})();","map":null,"metadata":{},"sourceType":"module"}