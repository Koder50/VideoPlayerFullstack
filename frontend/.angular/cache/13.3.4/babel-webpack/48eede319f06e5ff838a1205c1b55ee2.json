{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addVideoPlayerState, modifyVideoPlayerState, removeAllVideoPlayerState, removeVideoPlayerState, setVideoPlayerList } from './video-player.actions';\nexport const initialState = {\n  videoPlayers: []\n};\nexport const videoPlayerReducer = createReducer(initialState, on(setVideoPlayerList, (state, {\n  videoPlayers\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayers\n  });\n}), on(removeVideoPlayerState, (state, {\n  videoPlayerId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayers: state.videoPlayers.filter(data => data.id != videoPlayerId)\n  });\n}), on(addVideoPlayerState, (state, {\n  videoPlayer\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayers: [...state.videoPlayers, videoPlayer]\n  });\n}), on(modifyVideoPlayerState, (state, {\n  videoPlayer\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayers: state.videoPlayers.map(data => data.id === videoPlayer.id ? videoPlayer : data)\n  });\n}), on(removeAllVideoPlayerState, state => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayers: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}