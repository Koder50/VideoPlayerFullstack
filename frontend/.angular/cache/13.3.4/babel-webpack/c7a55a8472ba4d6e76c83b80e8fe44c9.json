{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addChatParticipantState, modifyChatParticipantState, removeAllChatParticipantState, removeChatParticipantState, setChatParticipantList } from './chat-participant.actions';\nexport const initialState = {\n  chatParticipants: []\n};\nexport const chatParticipantReducer = createReducer(initialState, on(setChatParticipantList, (state, {\n  chatParticipants\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    chatParticipants\n  });\n}), on(removeChatParticipantState, (state, {\n  chatParticipantId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    chatParticipants: state.chatParticipants.filter(data => data.id != chatParticipantId)\n  });\n}), on(addChatParticipantState, (state, {\n  chatParticipant\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    chatParticipants: [...state.chatParticipants, chatParticipant]\n  });\n}), on(modifyChatParticipantState, (state, {\n  chatParticipant\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    chatParticipants: state.chatParticipants.map(data => data.id === chatParticipant.id ? chatParticipant : data)\n  });\n}), on(removeAllChatParticipantState, state => {\n  return Object.assign(Object.assign({}, state), {\n    chatParticipants: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}