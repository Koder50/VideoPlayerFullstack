{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addVideoPlayerHistoricalState, modifyVideoPlayerHistoricalState, removeAllVideoPlayerHistoricalState, removeVideoPlayerHistoricalState, setVideoPlayerHistoricalList } from './video-player-historical.actions';\nexport const initialState = {\n  videoPlayersHistorical: []\n};\nexport const videoPlayerHistoricalReducer = createReducer(initialState, on(setVideoPlayerHistoricalList, (state, {\n  videoPlayersHistorical\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayersHistorical\n  });\n}), on(removeVideoPlayerHistoricalState, (state, {\n  videoPlayerHistoricalId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayersHistorical: state.videoPlayersHistorical.filter(data => data.id != videoPlayerHistoricalId)\n  });\n}), on(addVideoPlayerHistoricalState, (state, {\n  videoPlayerHistorical\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayersHistorical: [...state.videoPlayersHistorical, videoPlayerHistorical]\n  });\n}), on(modifyVideoPlayerHistoricalState, (state, {\n  videoPlayerHistorical\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayersHistorical: state.videoPlayersHistorical.map(data => data.id === videoPlayerHistorical.id ? videoPlayerHistorical : data)\n  });\n}), on(removeAllVideoPlayerHistoricalState, state => {\n  return Object.assign(Object.assign({}, state), {\n    videoPlayersHistorical: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}