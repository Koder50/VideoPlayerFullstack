{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VideoPlayerHistoricalService = /*#__PURE__*/(() => {\n  class VideoPlayerHistoricalService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getVideoPlayersHistorical() {\n      return this.http.get(`${environment.apiURL}/video-players-historical`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    getVideoPlayerHistorical(id) {\n      return this.http.get(`${environment.apiURL}/video-players-historical/${id}`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    addVideoPlayerHistorical(videoPlayerHistorical) {\n      return this.http.post(`${environment.apiURL}/video-players-historical`, videoPlayerHistorical).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    updateVideoPlayerHistorical(id, videoPlayerHistorical) {\n      return this.http.put(`${environment.apiURL}/video-players-historical/${id}`, videoPlayerHistorical).pipe(catchError(err => throwError(() => err)));\n    }\n\n    deleteVideoPlayerHistorical(id) {\n      return this.http.delete(`${environment.apiURL}/video-players-historical/${id}`).pipe(catchError(err => throwError(() => err)));\n    }\n\n  }\n\n  VideoPlayerHistoricalService.ɵfac = function VideoPlayerHistoricalService_Factory(t) {\n    return new (t || VideoPlayerHistoricalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  VideoPlayerHistoricalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VideoPlayerHistoricalService,\n    factory: VideoPlayerHistoricalService.ɵfac,\n    providedIn: 'root'\n  });\n  return VideoPlayerHistoricalService;\n})();","map":null,"metadata":{},"sourceType":"module"}